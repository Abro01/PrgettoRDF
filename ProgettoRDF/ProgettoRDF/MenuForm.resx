<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnProfilo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnHome.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAPSSURBVHhe7ZrJy01xGMdfszIlCrGxkGnBio1YKJGQnZ1SRJmSKH8BMsXOsLFVSkqJslPYmCkL
        JEWUMs98vq979Xg60+/8znXvfd/zqU/d4fc853nO+Dvn3p6ampqamvaxtGG/ZDV+xi+4Rh/0JzbiD/zV
        8Cduw37BblTDzeate7HPMgD3Y1Lj1qM4EPsUg/AU+mY/NPSfa6xi+gRD8Qz6Jt/gApyHrxufWc/hcOxq
        RuBF9M29wLnYZDY+Rz/uCo7GrmQsXkXf1BOchp6p+Aj9+Bs4HruKiXgLfTP3cQqmUTauo4jdkqF7TkdR
        1bFc9NzRUVR9Ns+7enQUi/Ed+mJP42Asi+YCJ9Dn1dxhGXYEupH5ir7IqmZ0aTPIb7gW24q/qWnaijm9
        7iH8cnRPsR3bQjsK+p8rPJV275KtPuQy6ZSTUqtOupkMw7PoFxp6WdJc4TDexfcN9foQzsKiaJlatq9H
        NarWShmJl9EvLGRiouv6MfyOPk9TfXcEh2ARtGzV4POoVtVcCePwGvqFPMaiU1M1fwl9jjQ1Cyy6ElSD
        avE5VLNqj2Iy3kOfXJ/pu6Joy/sceWpPKEpVdf5D2pq9jiFrVse83+1V2Eoc1XAV6o7PjtFVZSYWRTWp
        NptDhuypf5mDSceWVMEh6IRn49V80o3RGHyAduxBDEG12fim6kU9FSLt7No0FL9ramunod8K7Ng7GIqN
        txa6WulanvSQ0hrKW7TxWXuQ9gw7VrGh2Hhv5nxFDzL0K01SoDUUP2Fp5wqQ6lG9JrIL7eA97r0Mpd2H
        gO9BPWayD3XDsan33b/BMhTN8Gy8zvY64Xn02UO0Y0NPgsLGS6Fe1JN6y0U3O/P/vOwlKWEIM1CXNJtD
        Z3ttbe3yUq9984qZjqHYHLKJelJvwaQlDEFb0ufJ8wCWweeJpoqEEzDr0urVWMWUweeKJjah/gDxEn2e
        PBWzBEPxeaKJSbgOs+7+8izzkMXniKZswhWY1PxN3IKa5+v5v9RzgK2Y9KuQVsJyLIqPj6ZMwknofyP4
        hOsx67GVvtuA+uuMjX2F+tmsCDZORlMm4Um0MWp+IRZlEfqVcByLYGNkNKEJdf/tr/va8qFo8mJzKKf2
        rDxsjIwmNOFOtON1zJd5WquY22hz7cA87HgZTWjCC2jHb8ay6J9jNtd5zMOOl9GEJnyGdnzIUx2Prg42
        11PMw46X0YQm1AnPjo95OqtYm+sj5mHHy2gqT9hiKq+38oQtpvJ6K0/YYiqvt/KELabyen3CbjOapKTd
        ZDRJSbvJaJKSdpM1NTU1NTU1NQn09PwGKQmH9k6bMPwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnLogout.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAIOSURBVHhe7ZnNSQNRGEWDHViALqzDvbpQrMICVLAO17qyDRtQsAYFfxB0ZQX6fWAgPF58c3K9
        MSPvwNnM3Lk3E80skkmn0+n8MZvhTngSXoY34Uf4GO6F/4Z5N/r5g/kmjI71cDs8Cs/D6/AtrN3gEFeW
        377Rea4c++FrWHuxi5gfg9swPxan38cW8SlcyjPjOay9gJZ5o/m5zxvN50A+D/K5UFK7dqhLeWbUhmfN
        G70Lr8KzMP9jtsK1cAi1TqKdcvAiPA7zL7oRqpT9VDvuQdpP8zLuQdpP8zLuQdpP8zLuQdpP8zLuQdpP
        8zLuQdpP8zLuQdpP8zLuQdpP8zLuQdpP8zLuQdpP8zLuQdpP8zLuQdpP8zLuQdpP8zLuQdpP8zLuQdpP
        8zLuQdpP8zLq4GH4HuYXqAd5oID207yMOvgSTq/N7xdLZrvTFjQvow62rm+dL6F5GXWwdX3rfAnNy6iD
        retb50toXkYdbF3fOl9C8zLq4EM4vfY+DxTMdqctaF5GHcyfr/JnrHQ3DxTQfpqXcQ/SfpqXcQ/SfpqX
        cQ/SfpqXcQ/SfpqXcQ/SfpqXcQ/SfpqXcQ/SfpqXcQ/SfpqXcQ/SfpqXcQ/SfpqXcQ/SfpqXcQ/SfpqX
        cQ/SfpqXcQ/SfpqXcQ/SfpqXcQ/SfprHlANjU6ZWOiZlaqVjUqZWOiY7nU6n0+l0KkwmXz76Z0fNNbCu
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>