<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnProfilo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnProfilo.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>